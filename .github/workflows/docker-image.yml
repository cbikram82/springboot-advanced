name: CI/CD Pipeline for Spring Boot Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK (if your project requires building via Maven or Gradle)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Build the application (Maven example)
      - name: Build with Maven
        run: mvn clean install -DskipTests

      # Step 4: Set up Docker Buildx for multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 5: Build the Docker image for arm64 architecture
      - name: Build Docker image for ARM64
        run: |
          docker buildx build --platform linux/arm64 -t bikram82/myapp:latest --progress=plain --no-cache --load .

      # Step 6: Log in to Docker Hub (for pushing the image)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 7: Push the Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push bikram82/myapp:latest

  deploy:
    runs-on: [self-hosted]
    needs: build

    steps:
      # Step 2: Pull the Docker image (ARM64) from Docker Hub
      - name: Pull Docker image from Docker Hub
        run: docker pull bikram82/myapp:latest

      - name: Delete old Container
        run: docker rm -f myapp
      # Step 3: Deploy the Docker container locally (optional)
      - name: Run Docker container in AWS Instance
        run: |
          docker run -d -p 8080:8080 --name myapp --platform linux/amd64 bikram82/myapp:latest
